name: Java CI with Gradle

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build
      
      - name: Run tests
        run: ./gradlew test

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      
  package:
    name: Package and Publish
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build container image
        run: ./gradlew bootBuildImage --imageName ghcr.io/${{ github.repository }}/my-image:${{ github.sha }}

      - name: Scan container image for vulnerabilities
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ghcr.io/${{ github.repository }}/my-image:${{ github.sha }}
          fail-build: true
          severity-cutoff: high

      - name: Publish container image
        run: docker push ghcr.io/${{ github.repository }}/my-image:${{ github.sha }}
